using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Xunit;
using Rosalind.Core;

namespace Rosalind.Solutions {
    public class Solutions {
        [Fact]
        public void DNA() {
            DNA_Solve("AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGC", "20 12 17 21");
            DNA_Solve("TTAGGATATTAATTACGACGAATCAAACGGTTTTGGCCAATCTATTTGATCCAACCTGAAGGGCCGTACCCTATATGACAAGATTAGATGATGGTGGATGATCCACCGACAGAACATTAACGTCACGGGGGAAACCCCGGATACTAATGCCATGGGATGGTCCTCTACTTTCTTCACGAAGAACCTAGTTGCCGATGAATATCTACTTGCGCATGTAAAGATTAGAATAACATGTTTCGGGGTCCAACCTCATCGTGAACTAGTAGTGATTCCCTGTCGCACGTTATTACGCGGGGTGCCAAGCTACGCGTCGGCGTGCGATTGATATAGCCTGTCAGGCATACGGGTGGACTCACGGTCGCCGTGGATTCCCCAACCGCCCGAAGCGTATTGAATAGGCCCGGACTAGCTGTGGTACACGCTCTCGTGCCGCCGGGGCGGAGTGGTTAGATTTCAAAACGACACAAAGTGAGCGTTTACCAACTCTCGTAATCTTGCGGAATGAGTACCCTCAATGGTGAGCCCGAATTCGTACATTTAGGCGTCCGTGTATCATTGAAACGGTTAAAATCACCCCTATTGGTCAAAGAAAGCCATTCAGTCGTATAGCCTATAGTGTACCAGGGCATACTTGAAATGGACTTCTCTAAGGCTTCGGGGGAGGAAGGAGGTTTACTTCAATATCTTGGAGGGACTCTATAGTCCGATAGTAATAAGATTCTTCAAGTAACGTGGGGAAGTATGTATGGGCGGAGGAACCGTTATTCACTAGATCGAGTGCCGTATTGCAAGTACTACGCGGTGCCGACCGGCGTGGGCTGGATCTCAGACCGAAGACAATATTACGCCTCTGAGCATATGATGTCATTGTCTATCCGTCTTGGTGAGCGGGCTGGAGAATTAGGTCTGGCCACTTGGCAAGTAAGATGCTTAGGGAACATTCAAAAGTGTTCTGTAGCTGGTGATAAAGACATCGAAGGACTACTACTGTAGTTGTAA", "263 216 264 256");
        }

        private void DNA_Solve(string input, string answer) {
            var dnaString = new DnaString(input);
            var result = dnaString.GetNucleotideCounts();
            Assert.Equal(answer, result);
        }
        
        [Fact]
        public void RNA() {
            RNA_Solve("GATGGAACTTGACTACGTAAATT", "GAUGGAACUUGACUACGUAAAUU");
            RNA_Solve("CTCAGGCCAGCTGGTGCCACATTAAAACAGCCATGGGCATCAGTCCCCACTCCGGCGGAAGTTTAATATGGAAACAATCACTTGGACAGAATGCTAAGTTTCGTCAAGTCAACCCAATCGCGTCGAATAGTCGTATAAGGATACTACACGGTGCGTGACGAGACTCTGGTCTTCAGGTTGCGCATTGTCGGTATTGTGCGGCTGGACGTGCGCGCCTTGCTTATAATCGTGTGGGCTCGTAGAACGATTCACGATTCCCATTTAAGTCTTGGTCGCACTGTAACTGTAGTGCACAGCTTCGCTCTGGACTGCTTTGTTCAGATAAAGCGGCAATGCAGGTGCTCAAGCGCAGATATGGATGACGATCGTGGAGTTAATAGGCCATACAACGGACTAATGGCTAGAACCCGCTGGTCGATGGAGCCTGATCACCGTCTAAGCTTACGGTATTGGCGGGGATCACATCTGGGTAATCGCTGGCTATAGTGCGCGCCCTATCATCCACTTGCGGCCGTCATGGTAAATACGAATTGACTCAAGACGGCCGATACGCACAAGTGCACTAGAGCCGTGTCAGCCGACGGATACGGCTGTGATTGCGCCACATATCCTGTCCAGGCCGGTTCGGTGATTTACCAGATGGCTCTCGTCCACCCCCCTTGTACTCAAGCATGCTTCTCGCTACCCTGGCCGTTTAAGTATGGGGTTATTCATTGAGTCGCAGCAGAGCTTTACGCGGGCCCTACGTTGTATTGGGAGATGCTTGTCCGTCCCAGCTACCTACTGACCTGGGACCTTGAGCGGTAGTCGCGTCGTGACGCTCGGGCTCAGGGATAACATTCCTACCTACGGTCGTCGCTGAATCTAAAGACTGTCCTGCAGCCGGCGTGGGAAAACCGGCGGCCAAGCGACTACTGACATCGTATGTTTGGGGGTA", "CUCAGGCCAGCUGGUGCCACAUUAAAACAGCCAUGGGCAUCAGUCCCCACUCCGGCGGAAGUUUAAUAUGGAAACAAUCACUUGGACAGAAUGCUAAGUUUCGUCAAGUCAACCCAAUCGCGUCGAAUAGUCGUAUAAGGAUACUACACGGUGCGUGACGAGACUCUGGUCUUCAGGUUGCGCAUUGUCGGUAUUGUGCGGCUGGACGUGCGCGCCUUGCUUAUAAUCGUGUGGGCUCGUAGAACGAUUCACGAUUCCCAUUUAAGUCUUGGUCGCACUGUAACUGUAGUGCACAGCUUCGCUCUGGACUGCUUUGUUCAGAUAAAGCGGCAAUGCAGGUGCUCAAGCGCAGAUAUGGAUGACGAUCGUGGAGUUAAUAGGCCAUACAACGGACUAAUGGCUAGAACCCGCUGGUCGAUGGAGCCUGAUCACCGUCUAAGCUUACGGUAUUGGCGGGGAUCACAUCUGGGUAAUCGCUGGCUAUAGUGCGCGCCCUAUCAUCCACUUGCGGCCGUCAUGGUAAAUACGAAUUGACUCAAGACGGCCGAUACGCACAAGUGCACUAGAGCCGUGUCAGCCGACGGAUACGGCUGUGAUUGCGCCACAUAUCCUGUCCAGGCCGGUUCGGUGAUUUACCAGAUGGCUCUCGUCCACCCCCCUUGUACUCAAGCAUGCUUCUCGCUACCCUGGCCGUUUAAGUAUGGGGUUAUUCAUUGAGUCGCAGCAGAGCUUUACGCGGGCCCUACGUUGUAUUGGGAGAUGCUUGUCCGUCCCAGCUACCUACUGACCUGGGACCUUGAGCGGUAGUCGCGUCGUGACGCUCGGGCUCAGGGAUAACAUUCCUACCUACGGUCGUCGCUGAAUCUAAAGACUGUCCUGCAGCCGGCGUGGGAAAACCGGCGGCCAAGCGACUACUGACAUCGUAUGUUUGGGGGUA");
        }

        private void RNA_Solve(string input, string answer) {
            var dnaString = new DnaString(input);
            var result = dnaString.TranscribeToRna();
            Assert.Equal(answer, result);
        }

        [Fact]
        public void REVC() {
            REVC_Solve("AAAACCCGGT", "ACCGGGTTTT");
            REVC_Solve("TCTCGATGAATGTTAACTTTGCATCCCGGTCGTACCTGCACTCACACTGATCTCATTTAAATCGCCATTAACCCTGTTCCCGAATCAAAGGGAATATTTTATAAATATTTGGTGTCTCCCACAAACCCCCCTGCCGCACACGATGATTCTGTGCAAGGCAGACCGGCAATGGAGGCCTGTCAGTCCATGCGCCGCCCTGTGTGCACGATAGACAGATTGATCCGCCCTTGTTGTATGCGTCGTTACTGGTTCACGCCTTTCTGTCAAACGCCGTGTCAAACACGTATGTATCCGACAAGGGCCAGATTTTTGCCTCTGATCTTGACTGTGGAACCAACAATCACGGGCCCCATGTTATTTGTGGTGAAACTATCTGACGGGCTCTCCGGTCGGCCGCCAGGTTAAAGGCACCTTCGAGAACAGCTGCGGGGTGGTCACAGTGCAAGATCTACTAGCAACATGCACTCGTGTCACAAACAACCTACTTACCCTTAGCCGACTCCTCTTGTAATGATCCCGTATTCCGGCAATTCCTGTTCGACTCAAAGCACTGCCGGTAGTTCTTAACGGAGTTTGGGAGTGGCAGTATCCTTGGGAGGCTGTCCCTCCTAGAGTCCAACGATTTTGTCTACCACAATACGTAACCGCGAATCATAAGATTTGTACCGCCGCAAAATCCCGAGTATTCAATTAAAAGCGCGCTAAGTATTACTGATATGTCGCATGCCGACGTCTGATGTCATAACTGACCAAACGTCGCGTAGGTAGGGAAACAATAGACTCAACAACTGGGGAAGAGGTGTAGGTGCATAAGTACCTTGTCTCGCTTGACAGGCAGCGTCAGCAGGGTGTTATTGT", "ACAATAACACCCTGCTGACGCTGCCTGTCAAGCGAGACAAGGTACTTATGCACCTACACCTCTTCCCCAGTTGTTGAGTCTATTGTTTCCCTACCTACGCGACGTTTGGTCAGTTATGACATCAGACGTCGGCATGCGACATATCAGTAATACTTAGCGCGCTTTTAATTGAATACTCGGGATTTTGCGGCGGTACAAATCTTATGATTCGCGGTTACGTATTGTGGTAGACAAAATCGTTGGACTCTAGGAGGGACAGCCTCCCAAGGATACTGCCACTCCCAAACTCCGTTAAGAACTACCGGCAGTGCTTTGAGTCGAACAGGAATTGCCGGAATACGGGATCATTACAAGAGGAGTCGGCTAAGGGTAAGTAGGTTGTTTGTGACACGAGTGCATGTTGCTAGTAGATCTTGCACTGTGACCACCCCGCAGCTGTTCTCGAAGGTGCCTTTAACCTGGCGGCCGACCGGAGAGCCCGTCAGATAGTTTCACCACAAATAACATGGGGCCCGTGATTGTTGGTTCCACAGTCAAGATCAGAGGCAAAAATCTGGCCCTTGTCGGATACATACGTGTTTGACACGGCGTTTGACAGAAAGGCGTGAACCAGTAACGACGCATACAACAAGGGCGGATCAATCTGTCTATCGTGCACACAGGGCGGCGCATGGACTGACAGGCCTCCATTGCCGGTCTGCCTTGCACAGAATCATCGTGTGCGGCAGGGGGGTTTGTGGGAGACACCAAATATTTATAAAATATTCCCTTTGATTCGGGAACAGGGTTAATGGCGATTTAAATGAGATCAGTGTGAGTGCAGGTACGACCGGGATGCAAAGTTAACATTCATCGAGA");
        }

        private void REVC_Solve(string input, string answer) {
            var dnaString = new DnaString(input);
            var result = dnaString.GetReverseComplement();
            Assert.Equal(answer, result);
        }
    }
}
